{"version":3,"sources":["Compnents/Navbar.js","Compnents/TextForm.js","Compnents/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","placeholder","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","console","log","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","type1","setTimeout","body","Compnents_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"mMASe,SAASA,EAAOC,GAG7B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAS,kCAAAC,OAAoCL,EAAMM,KAAI,QAAAD,OAAOL,EAAMM,OACrEL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAeG,KAAK,KAAI,IAAEP,EAAMQ,MAAM,KACnDP,EAAAC,EAAAC,cAAA,UACEC,UAAU,iBACVK,KAAK,SACLC,iBAAe,WACfC,iBAAe,0BACfC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBAEXb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBAElBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BW,GAAG,0BAEzCd,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8BACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEZH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBY,eAAa,OAAOT,KAAK,KAAI,SAE9DN,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAOlBH,EAAAC,EAAAC,cAAA,OAAKC,UAAS,uCAAAC,OAAsD,UAAbL,EAAMM,KAAe,OAAO,UACjFL,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBK,KAAK,WAAWQ,QAASjB,EAAMkB,WAAaH,GAAG,2BAEnFd,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mBAAmBe,QAAQ,0BAAyB,wBCtCpE,SAASC,EAASpB,GAG/B,IAmDCqB,EAEuBC,mBAAS,IAAGC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAA7BK,EAAIH,EAAA,GAAEI,EAAOJ,EAAA,GAEpB,OACEtB,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiByB,MAAO,CAACC,MAAoB,UAAb9B,EAAMM,KAAe,QAAQ,UACzEL,EAAAC,EAAAC,cAAA,UAAKH,EAAM+B,SACV9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAEXH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,eAAe4B,YAAY,mCAAmCH,MAAO,CAACI,gBAA8B,UAAbjC,EAAMM,KAAe,QAAQ,OAAQwB,MAAoB,UAAb9B,EAAMM,KAAe,QAAQ,SAAU4B,MAAOR,EAAMS,SAf9L,SAACC,GAItBT,EAAQS,EAAMC,OAAOH,QAWwNnB,GAAG,QAAQuB,KAAK,OAG9PrC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBa,QAhEnB,WAGpB,IAAIsB,EAAUb,EAAKc,cACnBb,EAAQY,GAERvC,EAAMyC,UAAU,yBAA0B,aA0DqB,wBAChExC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBa,QAzDnB,WAGpB,IAAIsB,EAAUb,EAAKgB,cACnBf,EAAQY,GAERvC,EAAMyC,UAAU,yBAA0B,aAmDqB,wBAChExC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBa,QAlDhB,WAIvBU,EADc,IAGd3B,EAAMyC,UAAU,cAAe,aA4CmC,cACnExC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBa,QA3CtB,WAEjB0B,QAAQC,IAAI,aACZ,IAAIlB,EAAOmB,SAASC,eAAe,SAEnCpB,EAAKqB,SACLrB,EAAKsB,kBAAkB,EAAG,OAG1BC,UAAUC,UAAUC,UAAUzB,EAAKQ,OACnClC,EAAMyC,UAAU,2BAA4B,aAiCgB,aAC7DxC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sBAAsBa,QA/Bf,WAExB,IAAIsB,EAAUb,EAAK0B,MAAM,QACzBzB,EAAQY,EAAQc,KAAK,MACrBrD,EAAMyC,UAAU,uBAAwB,aA2B2B,wBAEnExC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiByB,MAAO,CAACC,MAAoB,UAAb9B,EAAMM,KAAe,QAAQ,UAC1EL,EAAAC,EAAAC,cAAA,UAAI,qBACJF,EAAAC,EAAAC,cAAA,SAAIuB,EAAK0B,MAAM,KAAKE,OAAO,cAAY5B,EAAK4B,OAAO,eACnDrD,EAAAC,EAAAC,cAAA,SAAI,KAAQuB,EAAK0B,MAAM,KAAKE,OAAO,oBAEnCrD,EAAAC,EAAAC,cAAA,UAAI,WACJF,EAAAC,EAAAC,cAAA,SAAIuB,EAAK4B,OAAO,EAAE5B,EAAK,mCD1B7B3B,EAAOwD,aACP,CACI/C,MAAO,iBACPgD,UAAY,mBE5CDC,MAhBf,SAAezD,GAMb,OACEC,EAAAC,EAAAC,cAAA,OAAK0B,MAAO,CAAC6B,OAAQ,SACpB1D,EAAM2D,OAAS1D,EAAAC,EAAAC,cAAA,OAAKC,UAAS,eAAAC,OAAiBL,EAAM2D,MAAMlD,KAAI,gCAAgCmD,KAAK,SAChG3D,EAAAC,EAAAC,cAAA,cAAQ,IARO,SAAC0D,GAEhB,IAAMC,EAAQD,EAAKnB,cACnB,OAAOoB,EAAMC,OAAO,GAAGvB,cAAgBsB,EAAME,MAAM,GAKzCC,CAAWjE,EAAM2D,MAAMlD,MAAM,KAAU,IAAET,EAAM2D,MAAMO,OCyExDC,MAtEf,WAAe,IAAA9C,EACWC,mBAAS,SAAQC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAlCf,EAAIiB,EAAA,GAAE6C,EAAO7C,EAAA,GAEpB8C,EAC0B/C,mBAAS,MAAKgD,EAAA9C,OAAAC,EAAA,EAAAD,CAAA6C,EAAA,GAAjCV,EAAKW,EAAA,GAAEC,EAAQD,EAAA,GAEhB7B,EAAY,SAAC+B,EAASC,GAE1BF,EAAU,CACRL,IAAKM,EACL/D,KAAMgE,IAGRC,WAAW,WACTH,EAAS,OACR,OAiCL,OACEtE,EAAAC,EAAAC,cAAAF,EAAAC,EAAA0B,SAAA,KAEE3B,EAAAC,EAAAC,cAACJ,EAAM,CAACS,MAAM,YAAYgD,UAAU,QAAQlD,KAAMA,EAAOY,WAjC1C,WAEL,UAATZ,GAED8D,EAAQ,QACRvB,SAAS8B,KAAK9C,MAAMI,gBAAkB,OACtCQ,EAAU,6BAA8B,WACxCI,SAASrC,MAAQ,0BAejB4D,EAAQ,SACRvB,SAAS8B,KAAK9C,MAAMI,gBAAkB,QACtCQ,EAAU,8BAA+B,WACzCI,SAASrC,MAAQ,2BASjBP,EAAAC,EAAAC,cAACyE,EAAK,CAACjB,MAAOA,IACd1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAQPH,EAAAC,EAAAC,cAACiB,EAAQ,CAACW,QAAQ,mCAAmCzB,KAAMA,EAAMmC,UAAWA,OC/D3EoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAW9C,SAASC,eAAe,SACpD8C,OACH3F,EAAAC,EAAAC,cAACF,EAAAC,EAAM2F,WAAU,KACf5F,EAAAC,EAAAC,cAAC2F,EAAG,QAORjB","file":"static/js/main.576c1274.chunk.js","sourcesContent":["// type rfc to get the template\r\n\r\n// import React, { useState } from 'react'\r\nimport React from 'react'\r\n// type impt for importing proptypes\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\"\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\"> {props.title} </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n           \r\n              <ul className=\"navbar-nav me mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                  {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                  <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n                  {/* <a className=\"nav-link\" href=\"#\">{props.aboutText}</a> */}\r\n                </li>\r\n                \r\n              </ul>\r\n      \r\n            <div className={`form-check form-switch me-auto text-${props.mode==='light'?'dark':'light'}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode}  id=\"flexSwitchCheckDefault\"/>\r\n              {/* <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/> */}\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n  )\r\n}\r\n// if .isRequired is not writtern gives warnings\r\nNavbar.propTypes = \r\n{ \r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\n\r\n// For setting defalut values\r\nNavbar.defaultProps = \r\n{\r\n    title: \"Set title here\",\r\n    aboutText : \"About Text here\"\r\n}\r\n\r\n\r\n","// Using state\r\nimport React, {useState} from 'react'\r\n// type rfc for template\r\n\r\n\r\n\r\nexport default function TextForm(props) \r\n{\r\n  // console.log(text);\r\n  const handleUpClick = ()=>\r\n  {\r\n    // console.log(\"Upper Case clicked: \" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    // console.log(text);\r\n    props.showAlert(\"Converted to UpperCase\", \"success\");\r\n  }\r\n  const handleDoClick = ()=>\r\n  {\r\n    // console.log(\"Upper Case clicked: \" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    // console.log(text);\r\n    props.showAlert(\"Converted to LowerCase\", \"success\");\r\n  }\r\n  const handleClearClick = ()=>\r\n  {\r\n    // console.log(\"Upper Case clicked: \" + text);\r\n    let newText = \"\";\r\n    setText(newText);\r\n    // console.log(text);\r\n    props.showAlert(\"Text Cleard\", \"success\");\r\n  }\r\n  const handleCopy = ()=>\r\n  {\r\n    console.log(\"I am copy\");\r\n    var text = document.getElementById(\"myBox\");\r\n    \r\n    text.select();\r\n    text.setSelectionRange(0, 99999); // For mobile devices\r\n\r\n   // Copy the text inside the text field\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied to Clipboard\", \"success\");\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>\r\n  {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra spaces removed\", \"success\");\r\n  }\r\n\r\n\r\n\r\n  const handleOnChange = (event)=>\r\n  {\r\n    // console.log(\"On Chnage\");\r\n    \r\n    setText(event.target.value);\r\n  }\r\n  \r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n       <h2>{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n            {/* <label for=\"myBox\" class=\"form-label\">Enter your text here</label> */}\r\n            <textarea className=\"form-control\" placeholder='Enter the text you want to alter' style={{backgroundColor: props.mode==='light'?'white':'grey', color: props.mode==='light'?'black':'white'}} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        {/* button.btn.btn-primary */}\r\n\t  <button className=\"btn btn-primary m-3\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n\t  <button className=\"btn btn-primary m-3\" onClick={handleDoClick}>Convert to LowerCase</button>\r\n\t  <button className=\"btn btn-primary m-3\" onClick={handleClearClick}>Clear Text</button>\r\n\t  <button className=\"btn btn-primary m-3\" onClick={handleCopy}>Copy Text</button>\r\n\t  <button className=\"btn btn-primary m-3\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h2>Your text summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n      <p>{0.008 * text.split(\" \").length} Minutes to Read</p>\r\n      {/* <p>{0.008 * text.length} Minutes to Read</p> */}\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something to preview it\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>\r\n    {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height: '50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong> {capitalize(props.alert.type)} </strong> {props.alert.msg}\r\n        {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","\nimport \"./App.css\";\n// import About from \"./Compnents/About\";\nimport Navbar from \"./Compnents/Navbar\";\nimport TextForm from \"./Compnents/TextForm\";\nimport React, { useState } from 'react'\nimport Alert from \"./Compnents/Alert\";\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  // For Alert\n  const [alert, setAlert] = useState(null)\n\n  const showAlert = (message, type1)=>\n  {\n    setAlert ({\n      msg: message,\n      type: type1\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = ()=>\n  {\n    if(mode === 'light')\n    {\n      setMode('dark');\n      document.body.style.backgroundColor = 'grey';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"TextUtils - Dark Mode\"\n\n      // setInterval(()=>\n      // {\n      //   document.title = 'TextUtils is Amazing';\n      // }, 2000);\n      // setInterval(()=>\n      // {\n      //   document.title = 'Install TextUtils Now';\n      // }, 1500);\n\n      \n    }\n    else\n    {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"TextUtils Light Mode\"\n\n    }\n\n  }\n  return(\n    <>\n    {/* <Router> */}\n      <Navbar title=\"Textutils\" aboutText=\"About\" mode={mode}  toggleMode={toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        {/* /users --> Component 1\n        /users/home --> Component 2 */}\n        {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About mode={mode}/> */}\n            {/* </Route>  */}\n            {/* <Route path=\"/\"> */}\n              <TextForm heading=\"Enter your text to analyze below\" mode={mode} showAlert={showAlert}/>\n            {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}